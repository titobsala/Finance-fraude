#version: '3.8'

services:
  # Zookeeper
zookeeper:
  image: confluentinc/cp-zookeeper:latest
  container_name: zookeeper
  ports:
    - "2181:2181"
  environment:
    ZOOKEEPER_CLIENT_PORT: 2181
  networks:
    - kafka-network

  # Kafka
  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "transactions:4:1,processed-transactions:4:1,fraud-alerts:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  # Spark Master
  spark-master:
    build:
      context: ..
      dockerfile: docker/Dockerfile.spark
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    networks:
      - kafka-network

  # Spark Worker
  spark-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.spark
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    networks:
      - kafka-network

  # Data Generator
  generator:
    build:
      context: ..
      dockerfile: docker/Dockerfile.generator
    container_name: data-generator
    volumes:
      - ./src:/app/src
      - ./config:/app/config
    depends_on:
      - kafka
    networks:
      - kafka-network

  # Transaction Processor
  processor:
    build:
      context: ..
      dockerfile: docker/Dockerfile.processor
    container_name: processor
    volumes:
      - ./src:/app/src
      - ./config:/app/config
    depends_on:
      - kafka
      - spark-master
    networks:
      - kafka-network

  # Grafana
  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana:/etc/grafana/provisioning
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - kafka-network

  # InfluxDB (para armazenar m√©tricas)
  influxdb:
    image: influxdb:2.6-alpine
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=fraud-detection
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-token
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  grafana-storage:
  influxdb-storage: